version: "3.4"

# LoginID Demo
#
# The compose file will pull pre-built images from Docker Hub (hub.docker.com)
#
# To use this follow the instructions to create an .env file. Once the .env file is available,
# use this file by running: docker-compose -f docker-compose-hub.yml up'
#
services:

  # contains the website
  #
  nginx:
    container_name: tutorial_web
    image: saschaloginid/tutorial_web:latest
    restart: always
    ports:
      - "80:80"
    environment:
      - "HOSTNAME=${HOSTNAME}"
      - "BASEURL=${BASE_URL}"
      - "WEBCLIENTID=${CLIENT_ID_WEB}"

  # contains the backend (UserMgmt)
  #
  usermgmt:
    container_name: tutorial_backend
    image: saschaloginid/tutorial_backend:latest
    restart: always
    ports:
      - "8080:8080"
    environment:
      - "HOSTNAME=${HOSTNAME}"
    volumes:
      - .env:/opt/docker/loginid/config

  # contains the kong docker gateway including the LoginID plugin
  #
  kong:
    container_name: tutorial_kong_gw
    image: saschaloginid/tutorial_kong_gw:latest
    restart: always
    ports:
      - "8090:8000"
      - "8001:8001"
      - "8444:8444"
    environment:
      - "KONG_DATABASE=off"
      - "KONG_PROXY_ACCESS_LOG=/dev/stdout"
      - "KONG_ADMIN_ACCESS_LOG=/dev/stdout"
      - "KONG_PROXY_ERROR_LOG=/dev/stderr"
      - "KONG_ADMIN_ERROR_LOG=/dev/stderr"
      - "KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl"
      - "HOSTNAME=${HOSTNAME}"
      - "BASEURL=${BASE_URL}"
      - "WEBCLIENTID=${CLIENT_ID_WEB}"